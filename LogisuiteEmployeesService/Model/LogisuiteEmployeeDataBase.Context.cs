//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogisuiteEmployeesService.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LogisuiteEntities : DbContext
    {
        public LogisuiteEntities()
            : base("name=LogisuiteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employees { get; set; }
    
        public virtual int DeleteValue(int id)
        {
            var idParameter = id != 0?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteValue", idParameter);
        }
    
        public virtual int InsertValue(string name, string lastName, Nullable<decimal> annualSalary, string address, Nullable<long> phone, Nullable<long> socialSecurityNumber)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var annualSalaryParameter = annualSalary.HasValue ?
                new ObjectParameter("AnnualSalary", annualSalary) :
                new ObjectParameter("AnnualSalary", typeof(decimal));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var socialSecurityNumberParameter = socialSecurityNumber.HasValue ?
                new ObjectParameter("SocialSecurityNumber", socialSecurityNumber) :
                new ObjectParameter("SocialSecurityNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertValue", nameParameter, lastNameParameter, annualSalaryParameter, addressParameter, phoneParameter, socialSecurityNumberParameter);
        }
    
        public virtual int UpdateValue(Nullable<int> id, string name, string lastName, Nullable<decimal> annualSalary, string address, Nullable<long> phone, Nullable<long> socialSecurityNumber)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var annualSalaryParameter = annualSalary.HasValue ?
                new ObjectParameter("AnnualSalary", annualSalary) :
                new ObjectParameter("AnnualSalary", typeof(decimal));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var socialSecurityNumberParameter = socialSecurityNumber.HasValue ?
                new ObjectParameter("SocialSecurityNumber", socialSecurityNumber) :
                new ObjectParameter("SocialSecurityNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateValue", idParameter, nameParameter, lastNameParameter, annualSalaryParameter, addressParameter, phoneParameter, socialSecurityNumberParameter);
        }
    
        public virtual ObjectResult<ViewAll_Result> ViewAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewAll_Result>("ViewAll");
        }
    
        public virtual ObjectResult<SelectValue_Result> SelectValue(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectValue_Result>("SelectValue", idParameter);
        }
    }
}
